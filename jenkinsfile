pipeline {
    agent any
    
    stages {
        stage('Récupérer le code') {
            steps {
                git branch: 'main', url: 'https://github.com/fatoumbodj/pyshop.git'
            }
        }
        
        stage('Installer les dépendances') {
            steps {
                sh 'npm'
               
            }
        }
        
        stage('Tester les unitaires') {
            steps {
                sh 'junit'
            }
        }
        
        stage('Tester la sécurité avec Sonar') {
            steps {
                withSonarQubeEnv('nom_du_serveur_SonarQube') {
                    sh 'sonar-scanner'
                }
            }
        }
        
        stage('Construire l\'image Docker') {
            steps {
                sh 'docker build -t pyshop'
            }
        }
        
        stage('Déployer sur le serveur d\'intégration ou de production') {
            when {
                // si la branche est "dev", on déploie sur le serveur d'intégration
                branch 'dev'
            }
            steps {
                sh 'docker-compose'
            }
            // envoi d'un email en cas d'erreur
            post {
                failure {
                    mail to: 'mbodjfaticha99@gmail.com', subject: 'Erreur de déploiement'
                }
            }
        }
        
         stage('Déployer sur les serveurs de production avec Ansible') {
            when {
                // si la branche est "master", on déploie sur les serveurs de production avec Ansible
                branch 'master'
            }
            steps {
                sh 'ansible-playbook nom_du_fichier_playbook.yml'
            }
            // envoi d'un email en cas d'erreur
            post {
                failure {
                    mail to: 'adresse_email_des_développeurs', subject: 'Erreur de déploiement'
                }
            }
        }
    }
}
//Ce script pipeline utilise Jenkins pour automatiser le processus de déploiement, en utilisant différents outils pour chaque étape : Git pour récupérer le code, Maven ou un outil d'installation pour installer les dépendances, Jest ou JUnit pour les tests unitaires, SonarQube pour les tests de sécurité, Docker pour la construction de l'image, Docker-compose ou Ansible pour le déploiement selon la branche. En cas d'erreur, un email est envoyé aux développeurs pour les informer. Notez que ce script est un exemple et qu'il faudra probablement l'adapter en fonction de votre environnement et de vos besoins.




